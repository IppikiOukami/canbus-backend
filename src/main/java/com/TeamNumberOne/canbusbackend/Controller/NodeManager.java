package com.TeamNumberOne.canbusbackend.Controller;

import com.TeamNumberOne.canbusbackend.Model.Node;

import com.TeamNumberOne.canbusbackend.Model.Packet;
import com.TeamNumberOne.canbusbackend.Repositories.NodeRepository;
import com.TeamNumberOne.canbusbackend.Repositories.PacketRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.*;

@CrossOrigin(origins = "http://localhost:3000")
@Controller // This means that this class is a com.TeamNumberOne.canbusbackend.Controller
@RequestMapping(path = "/visualizer")
public class NodeManager {
    @Autowired // This means to get the bean called projectRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private NodeRepository nodeRepository;

    @PostMapping(path="/addNode") // Map ONLY POST Requests
    public @ResponseBody String addNewNode (
            @RequestParam String NodeName,
            @RequestParam String ProjectID,
            @RequestParam int NodeID,
            @RequestParam String annotation,
            @RequestParam String ICON_PATH,
            @RequestParam String xyPosition
    ) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Node node = new Node();
        node.setNodeName(NodeName);
        node.setProjectID(ProjectID);
        node.setNodeID(NodeID);
        node.setAnnotation(annotation);
        node.setICON_PATH(ICON_PATH);
        node.setXyPosition(xyPosition);
        nodeRepository.save(node);
        return "Node Saved";
    }

    @GetMapping(path="/allNodes")
    public @ResponseBody Iterable<Node> getAllNodes() {
        // This returns a JSON or XML with the nodes
        return nodeRepository.findAll();
    }
}
