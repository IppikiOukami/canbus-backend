package com.TeamNumberOne.canbusbackend.Controller;

import com.TeamNumberOne.canbusbackend.Model.Node;

import com.TeamNumberOne.canbusbackend.Model.Packet;
import com.TeamNumberOne.canbusbackend.Repositories.NodeRepository;
import com.TeamNumberOne.canbusbackend.Repositories.PacketRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@CrossOrigin(origins = "http://localhost:3000")
@Controller // This means that this class is a com.TeamNumberOne.canbusbackend.Controller
@RequestMapping(path = "/visualizer")
public class ConnectController {
    @Autowired // This means to get the bean called projectRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private NodeRepository nodeRepository;
    @Autowired
    private PacketRepository packetRepository;

    @PostMapping(path="/addNode") // Map ONLY POST Requests
    public @ResponseBody String addNewNode (
            @RequestParam int nodeID,
            @RequestParam String projectID,
            @RequestParam String nodeName,
            @RequestParam String annotation,
            @RequestParam String ICON_PATH,
            @RequestParam String xyPosition
    ) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Node node = new Node();
        node.setNodeID(nodeID);
        node.setProjectID(projectID);
        node.setNodeName(nodeName);
        node.setAnnotation(annotation);
        node.setICON_PATH(ICON_PATH);
        node.setXyPosition(xyPosition);
        nodeRepository.save(node);
        return "Node Saved";
    }

    @PostMapping(path="/addPacket") // Map ONLY POST Requests
    public @ResponseBody String addNewPacket (
            @RequestParam String packetID,
            @RequestParam String Frame_START,
            @RequestParam String Frame_End,
            @RequestParam String control_Field,
            @RequestParam String data_Field,
            @RequestParam String CRC_Field,
            @RequestParam boolean ACK
    ) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Packet packet = new Packet();
        packet.setPacketID(packetID);
        packet.setFrame_START(Frame_START);
        packet.setFrame_END(Frame_End);
        packet.setControl_Field(control_Field);
        packet.setData_Field(data_Field);
        packet.setCRC_Field(CRC_Field);
        packet.setACK(ACK);
        packetRepository.save(packet);
        return "Packet Saved";
    }

    @GetMapping(path="/allNodes")
    public @ResponseBody Iterable<Node> getAllNodes() {
        // This returns a JSON or XML with the nodes
        return nodeRepository.findAll();
    }

    @GetMapping(path="/allPackets")
    public @ResponseBody Iterable<Packet> getAllPackets() {
        // This returns a JSON or XML with the packets
        return packetRepository.findAll();
    }
}
